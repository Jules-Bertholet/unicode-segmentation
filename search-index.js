var searchIndex = JSON.parse('{\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word …","t":[3,3,3,4,13,13,13,13,17,3,3,3,3,3,3,3,8,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Graphemes","GraphemeIndices","GraphemeCursor","GraphemeIncomplete","PreContext","PrevChunk","NextChunk","InvalidOffset","UNICODE_VERSION","UWordBounds","UWordBoundIndices","UnicodeWords","UnicodeWordIndices","USentenceBounds","USentenceBoundIndices","UnicodeSentences","UnicodeSegmentation","graphemes","grapheme_indices","unicode_words","unicode_word_indices","split_word_bounds","split_word_bound_indices","unicode_sentences","split_sentence_bounds","split_sentence_bound_indices","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","fmt","fmt","fmt","eq","ne","next_back","next_back","next_back","next_back","next_back","next_back","next","size_hint","size_hint","next","next","next","next","size_hint","size_hint","next","next","size_hint","next","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","as_str","as_str","new","set_cursor","cur_cursor","provide_context","is_boundary","next_boundary","prev_boundary","as_str","as_str"],"q":["unicode_segmentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["External iterator for a string’s grapheme clusters.","External iterator for grapheme clusters and byte offsets.","Cursor-based segmenter for grapheme clusters.","An error return indicating that not enough content was …","More pre-context is needed. The caller should call …","When requesting <code>prev_boundary</code>, the cursor is moving past …","When requesting <code>next_boundary</code>, the cursor is moving past …","An error returned when the chunk given does not contain …","The version of Unicode that this version of …","External iterator for a string’s word boundaries.","External iterator for word boundaries and byte offsets.","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","External iterator for a string’s sentence boundaries.","External iterator for sentence boundaries and byte …","An iterator over the substrings of a string which, after …","Methods for segmenting strings according to Unicode …","Returns an iterator over the grapheme clusters of <code>self</code>.","Returns an iterator over the grapheme clusters of <code>self</code> …","Returns an iterator over the words of <code>self</code>, separated on …","Returns an iterator over the words of <code>self</code>, separated on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","Create a new cursor. The string and initial offset are …","Set the cursor to a new location in the same string.","The current offset of the cursor. Equal to the last value …","Provide additional pre-context when it is needed to …","Determine whether the current cursor location is a …","Find the next boundary after the current cursor position. …","Find the previous boundary after the current cursor …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …"],"i":[0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,1,1,1,1,1,1,1,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,4,5,1,1,1,3,4,6,7,9,8,3,3,4,4,6,7,9,9,8,8,10,11,11,12,12,3,4,5,8,9,10,11,12,3,4,5,5,5,5,5,5,5,9,8],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",15]],["graphemes",3]],[[["bool",15]],["graphemeindices",3]],[[],["unicodewords",3]],[[],["unicodewordindices",3]],[[],["uwordbounds",3]],[[],["uwordboundindices",3]],[[],["unicodesentences",3]],[[],["usentencebounds",3]],[[],["usentenceboundindices",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["graphemeincomplete",4]],["bool",15]],[[["graphemeincomplete",4]],["bool",15]],[[],["option",4]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[],[["str",15],["option",4]]],[[],["option",4]],[[]],[[]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[],[["str",15],["option",4]]],[[],[["str",15],["option",4]]],[[]],[[],[["str",15],["option",4]]],[[],["option",4]],[[]],[[],["graphemeindices",3]],[[],["graphemes",3]],[[],["graphemecursor",3]],[[],["uwordbounds",3]],[[],["uwordboundindices",3]],[[],["unicodesentences",3]],[[],["usentencebounds",3]],[[],["usentenceboundindices",3]],[[],["str",15]],[[],["str",15]],[[["usize",15],["bool",15]],["graphemecursor",3]],[[["usize",15]]],[[],["usize",15]],[[["usize",15],["str",15]]],[[["usize",15],["str",15]],[["result",4],["bool",15],["graphemeincomplete",4]]],[[["usize",15],["str",15]],[["graphemeincomplete",4],["result",4],["option",4]]],[[["usize",15],["str",15]],[["graphemeincomplete",4],["result",4],["option",4]]],[[],["str",15]],[[],["str",15]]],"p":[[4,"GraphemeIncomplete"],[8,"UnicodeSegmentation"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UnicodeWords"],[3,"UnicodeWordIndices"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[3,"UnicodeSentences"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"]]}\
}');
initSearch(searchIndex);